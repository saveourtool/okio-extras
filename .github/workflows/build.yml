name: 'Build'

on:
  pull_request:
  push:
    branches:
      - 'master'
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.caching=true -Dorg.gradle.parallel=true -Dorg.gradle.welcome=never
  GPG_SEC: ${{ secrets.PGP_SEC }}
  GPG_PASSWORD: ${{ secrets.PGP_PASSWORD }}

jobs:
  build:
    name: 'Build (Java ${{ matrix.java-version }})'
    runs-on: ubuntu-latest
    strategy:
      # We need multiple builds to run even if the 1st one is failing, because
      # test failures may be Java-specific (or the tests themselves flaky).
      #
      # Java 8 is incompatible with `org.ajoberstar.reckon.settings`.
      fail-fast: false
      matrix:
        java-version: [ '11', '17' ]

    # A possible workaround for <https://github.com/dorny/test-reporter/issues/168>.
    permissions:
      checks: write
      contents: write
      pull-requests: write
      statuses: write
      # Explicitly granted, necessary for the `publish` step.
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch Git tags, so that semantic version can be calculated.
          # Alternatively, run `git fetch --prune --unshallow --tags` as the
          # next step, see
          # https://github.com/actions/checkout/issues/206#issuecomment-607496604.
          fetch-depth: 0

      - name: 'Set up Java ${{ matrix.java-version }}'
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ matrix.java-version }}
          java-package: jdk+fx

      - name: 'Execute Gradle build'
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Publish a snapshot (Java 17 only)'
        id: publish
        if: ${{ github.event_name == 'push' && github.ref_type == 'branch' && github.ref == 'refs/heads/master' && matrix.java-version == 17 }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
